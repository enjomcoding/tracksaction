/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package myproject.budget_app;

import java.awt.event.ItemEvent;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import myproject.Connect_DB.Operations;

/**
 *
 * @author jomsa
 */
public class View extends javax.swing.JDialog {

    /**
     * Creates new form Search
     * @param parent
     * @param modal
     * @param uid
     */
    public View(java.awt.Frame parent, boolean modal ,int uid) {
        super(parent, modal);
        setResizable(false);
        initComponents();
        this.uid = uid;
        Operations op = new Operations();

        // Load all data initially with the default filter (empty keyword)
        op.loadAllData(res_tbl, uid);
        String filter = getFilter(); // Get the current filter
        op.searchTrans(res_tbl, uid, "", filter);  // Initially call searchTrans with default filter

        // Add ItemListener for radio buttons to update the filter and refresh table
        latest.addItemListener((ItemEvent e) -> {
            String filter1 = getFilter(); // Get the updated filter from the selected radio button
            Operations op1 = new Operations();
            op1.searchTrans(res_tbl, uid, "", filter1); // Call searchTrans with updated filter
        });

        oldest.addItemListener((ItemEvent e) -> {
            String filter1 = getFilter(); // Get the updated filter from the selected radio button
            Operations op1 = new Operations();
            op1.searchTrans(res_tbl, uid, "", filter1); // Call searchTrans with updated filter
        });

        Amount.addItemListener((ItemEvent e) -> {
            String filter1 = getFilter(); // Get the updated filter from the selected radio button
            Operations op1 = new Operations();
            op1.searchTrans(res_tbl, uid, "", filter1); // Call searchTrans with updated filter
        });
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        sorter = new javax.swing.ButtonGroup();
        del_bttn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        res_tbl = new javax.swing.JTable();
        edit_bttn = new javax.swing.JButton();
        Amount = new javax.swing.JRadioButton();
        latest = new javax.swing.JRadioButton();
        oldest = new javax.swing.JRadioButton();
        bg = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        del_bttn.setIcon(new javax.swing.ImageIcon("D:\\[BSCS]\\Projects\\Info_Mgmt\\Budget_App\\budget_app\\image_assets\\del_bttn.png")); // NOI18N
        del_bttn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                del_bttnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                del_bttnMouseExited(evt);
            }
        });
        del_bttn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                del_bttnActionPerformed(evt);
            }
        });
        getContentPane().add(del_bttn, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 380, 80, 30));

        jScrollPane1.setOpaque(false);

        res_tbl.setFont(new java.awt.Font("Poppins", 0, 8)); // NOI18N
        res_tbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Title", "Type", "Description", "Amount", "Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        res_tbl.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        res_tbl.setAutoscrolls(false);
        jScrollPane1.setViewportView(res_tbl);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 404, 322));

        edit_bttn.setIcon(new javax.swing.ImageIcon("D:\\[BSCS]\\Projects\\Info_Mgmt\\Budget_App\\budget_app\\image_assets\\edit_bttn.png")); // NOI18N
        edit_bttn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                edit_bttnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                edit_bttnMouseExited(evt);
            }
        });
        edit_bttn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                edit_bttnActionPerformed(evt);
            }
        });
        getContentPane().add(edit_bttn, new org.netbeans.lib.awtextra.AbsoluteConstraints(337, 380, 80, 30));

        sorter.add(Amount);
        Amount.setFont(new java.awt.Font("Poppins Medium", 0, 14)); // NOI18N
        Amount.setText("Amount");
        Amount.setOpaque(false);
        getContentPane().add(Amount, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 20, 83, 20));

        sorter.add(latest);
        latest.setFont(new java.awt.Font("Poppins Medium", 0, 14)); // NOI18N
        latest.setText("Latest");
        latest.setOpaque(false);
        latest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                latestActionPerformed(evt);
            }
        });
        getContentPane().add(latest, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, 70, 20));

        sorter.add(oldest);
        oldest.setFont(new java.awt.Font("Poppins Medium", 0, 14)); // NOI18N
        oldest.setText("Oldest");
        oldest.setOpaque(false);
        getContentPane().add(oldest, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 20, 80, 20));

        bg.setIcon(new javax.swing.ImageIcon("D:\\[BSCS]\\Projects\\Info_Mgmt\\Budget_App\\budget_app\\image_assets\\bg9.jpg")); // NOI18N
        bg.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                bgMouseEntered(evt);
            }
        });
        getContentPane().add(bg, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 430, 420));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void latestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_latestActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_latestActionPerformed

    private void bgMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bgMouseEntered
        // TODO add your handling code here:
    
    }//GEN-LAST:event_bgMouseEntered

    private void edit_bttnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_edit_bttnMouseEntered
        // TODO add your handling code here:
        edit_bttn.setIcon(new ImageIcon("D:\\[BSCS]\\Projects\\Info_Mgmt\\Budget_App\\budget_app\\image_assets\\edit_bttn_clicked.png"));
    }//GEN-LAST:event_edit_bttnMouseEntered

    private void edit_bttnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_edit_bttnMouseExited
        // TODO add your handling code here:
        edit_bttn.setIcon(new ImageIcon("D:\\[BSCS]\\Projects\\Info_Mgmt\\Budget_App\\budget_app\\image_assets\\edit_bttn.png"));
    }//GEN-LAST:event_edit_bttnMouseExited

    private void del_bttnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_del_bttnMouseEntered
        // TODO add your handling code here:
        del_bttn.setIcon(new ImageIcon("D:\\[BSCS]\\Projects\\Info_Mgmt\\Budget_App\\budget_app\\image_assets\\del_bttn_clicked.png"));
    }//GEN-LAST:event_del_bttnMouseEntered

    private void del_bttnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_del_bttnMouseExited
        // TODO add your handling code here:
        del_bttn.setIcon(new ImageIcon("D:\\[BSCS]\\Projects\\Info_Mgmt\\Budget_App\\budget_app\\image_assets\\del_bttn.png"));
    }//GEN-LAST:event_del_bttnMouseExited

    private void edit_bttnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_edit_bttnActionPerformed
        // TODO add your handling code here:
        System.out.println("Edit button clicked."); // Debugging line
        int transactId = getSelectedTransactionId(); // Get the transact_id from the selected row
        if (transactId != -1) {
            System.out.println("Selected Transaction ID: " + transactId);
            Update up = new Update(this, true, uid, transactId);
            up.setVisible(true);
            // Refresh the table after editing
            refreshTable();
        } else {
            System.out.println("No transaction ID selected."); // Debugging line
        }
    }//GEN-LAST:event_edit_bttnActionPerformed

    private void del_bttnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_del_bttnActionPerformed
        // TODO add your handling code here:
        int transactId = getSelectedTransactionId(); // Get the transact_id from the selected row
        if (transactId != -1) {
            int confirm = JOptionPane.showConfirmDialog(this, "Are you sure you want to delete this transaction?", "Confirm Delete", JOptionPane.YES_NO_OPTION);
            if (confirm == JOptionPane.YES_OPTION) {
                Operations op = new Operations();
                op.deleteTrans(transactId, uid); // Call the delete method
                refreshTable(); // Refresh the table after deletion
            }
        } else {
            JOptionPane.showMessageDialog(this, "Please select a transaction to delete.");
        }
    }//GEN-LAST:event_del_bttnActionPerformed
    
    private String getFilter() {
        if (latest.isSelected()) {
            return "Latest";
        } else if (oldest.isSelected()) {
            return "Oldest";
        } else if (Amount.isSelected()) {
            return "Amount";
        }
        return "";
    }
    
    private int getSelectedTransactionId() {
        int selectedRow = res_tbl.getSelectedRow(); // Get the selected row index
        System.out.println("Selected Row Index: " + selectedRow); // Debugging line
        if (selectedRow != -1) { // Check if a row is selected
            // Get the transact_id from the model (assuming it's in the first column)
            Object value = res_tbl.getValueAt(selectedRow, 0); // Get the value as Object
            if (value instanceof String) {
                // Convert the String to Integer
                return Integer.parseInt((String) value);
            } else if (value instanceof Integer) {
                return (Integer) value; // If it's already an Integer, return it directly
            }
        } else {
            JOptionPane.showMessageDialog(this, "Please select a row first.");
        }
        return -1; // Return -1 if no row is selected
    }

    private void refreshTable() {
        Operations op = new Operations();
        String filter = getFilter(); // Get the current filter
        op.loadAllData(res_tbl, uid); // Reload all data into the table
        op.searchTrans(res_tbl, uid, "", filter); // Reapply the current filter
    }

    /**
     * @param args the command line arguments
     */

    int uid;
    private boolean isEditable = false; 
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton Amount;
    private javax.swing.JLabel bg;
    private javax.swing.JButton del_bttn;
    private javax.swing.JButton edit_bttn;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton latest;
    private javax.swing.JRadioButton oldest;
    private javax.swing.JTable res_tbl;
    private javax.swing.ButtonGroup sorter;
    // End of variables declaration//GEN-END:variables
}
